#       #######                                                #
#    ###       ###                                             #
#   ##   ## ##   ##   F: build.yml                             #
#        ## ##                                                 #
#                     C: 2022/06/18 18:01:48 by:dnettoRaw      #
#   ##   ## ##   ##   U: 2022/06/21 10:32:24 by:dnettoRaw      #
#     ###########                                              #

name: Build

on: 
  push:
    branches:
      - release

jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ ubuntu-latest, macOs-latest ] # windows-latest
        # os: [ self-hosted ] 

    env:
      RUST_VERSION: 1.61.0
      NODE_VERSION: 18.3
      GH_ACTIONS: true
      RUST_BACKTRACE: full

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ env.RUST_VERSION }}

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
     
     - name: get-npm-version
        id: package-version
      uses: martinbeentjes/npm-get-version-action@main

      - name: install webkit2gtk (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0

      - name: Build application
        run: |
          yarn
          yarn tauri build
      
      - name: log 
        run: |
          echo "::set-output name=version::$(cat package.json | jq -r '.version')"
          echo ":: ${{ matrix.kind }} ${{ matrix.os }}  ${{ steps.package-version.outputs.current-version}} ::"
          ls -LaR ./src-tauri

      - name: Release App
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v${{ steps.package-version.outputs.current-version}} # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "TAURI Templaite Realesa v${{ steps.package-version.outputs.current-version}}"
          releaseBody: "See the assets to download this version and install."
          draft: true
          files: |
            src-tauri/target/release/bundle/dmg/myapp__${{ steps.package-version.outputs.current-version}}_x64.dmg
            src-tauri/target/release/bundle/deb/myapp__${{ steps.package-version.outputs.current-version}}_x64.deb
            src-tauri/target/release/bundle/msi/myapp__${{ steps.package-version.outputs.current-version}}_x64.msi

      - name: Remove useless folders
        run: >
          rm -rf src-tauri/target/release/build

          rm -rf src-tauri/target/release/deps
          
          rm -rf src-tauri/target/release/bundle
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: my-app-latest-release-${{matrix.os}}-x64-installer-portable
          path: src-tauri/target/release